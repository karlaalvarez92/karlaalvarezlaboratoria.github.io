{"version":3,"sources":["Navbar.js","Skills.js","Contact.js","AboutMe.js","Proyects.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","scrollToTop","scroll","className","id","alt","onClick","this","activeClass","to","spy","smooth","offset","duration","Component","Skills","title","subtitle","dark","Contact","About","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAIqBA,E,2MACnBC,YAAc,WACZC,gBAAOD,e,wEAIP,OACE,yBAAKE,UAAU,MAAMC,GAAG,UACtB,yBAAKD,UAAU,eACZ,4BAECA,UAAU,WACVE,IAAI,OACJC,QAASC,KAAKN,cAEhB,wBAAIE,UAAU,aACZ,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CACEK,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,SAWF,wBAAIV,UAAU,YACZ,kBAAC,OAAD,CACEK,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,aAWF,wBAAIV,UAAU,YACZ,kBAAC,OAAD,CACEK,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,WAWF,wBAAIV,UAAU,YACZ,kBAAC,OAAD,CACEK,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,aAWF,wBAAIV,UAAU,YACZ,kBAAC,OAAD,CACEK,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANZ,mB,GAjEsBC,aCFrB,SAASC,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,KAAMd,EAAM,EAANA,GACtD,OACE,yBAAKD,UAAW,WAAae,EAAO,gBAAkB,KACpD,yBAAKf,UAAU,kBAAkBC,GAAIA,GACnC,4BAAKY,GACL,2BAAIC,KCLG,SAASE,EAAT,GAAiD,IAA9BH,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,KAAMd,EAAM,EAANA,GACvD,OACE,yBAAKD,UAAW,WAAae,EAAO,gBAAkB,KACpD,yBAAKf,UAAU,kBAAkBC,GAAIA,GACnC,4BAAKY,GACL,2BAAIC,KCLG,SAASG,EAAT,GAA+C,IAA9BJ,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,KAAMd,EAAM,EAANA,GACrD,OACE,yBAAKD,UAAW,WAAae,EAAO,gBAAkB,KACpD,yBAAKf,UAAU,kBAAkBC,GAAIA,GACnC,4BAAKY,GACL,2BAAIC,KCLG,SAASI,EAAT,GAAkD,IAA9BL,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,KAAMd,EAAM,EAANA,GACxD,OACE,yBAAKD,UAAW,WAAae,EAAO,gBAAkB,KACpD,yBAAKf,UAAU,kBAAkBC,GAAIA,GACnC,4BAAKY,GACL,2BAAIC,K,IC2CGK,E,iLAtCb,OACE,yBAAKnB,UAAU,OACX,kBAAC,EAAD,MACA,kBAACiB,EAAD,CACEJ,MAAM,WAENE,MAAM,EACNd,GAAG,aAEL,kBAACW,EAAD,CACEC,MAAM,SAENE,MAAM,EACNd,GAAG,aAEL,kBAAC,EAAD,CACEY,MAAM,WAENE,MAAM,EACNd,GAAG,aAEL,kBAACe,EAAD,CACEH,MAAM,UAENE,MAAM,EACNd,GAAG,kB,GA3BKU,aCEES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7929a806.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//import logo from \"../logo.svg\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nexport default class Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\" id=\"navbar\">\r\n        <div className=\"nav-content\">\r\n           <button\r\n            //src={logo}\r\n            className=\"nav-logo\"\r\n            alt=\"Logo\"\r\n            onClick={this.scrollToTop}\r\n          /> \r\n          <ul className=\"nav-items\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section1\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section1\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                About me\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section2\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Skills\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section3\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Projects\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section4\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default function Skills({ title, subtitle, dark, id }) {\r\n  return (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\r\n      <div className=\"section-content\" id={id}>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Contact({ title, subtitle, dark, id }) {\r\n  return (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\r\n      <div className=\"section-content\" id={id}>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About({ title, subtitle, dark, id }) {\r\n  return (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\r\n      <div className=\"section-content\" id={id}>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Projects({ title, subtitle, dark, id }) {\r\n  return (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\r\n      <div className=\"section-content\" id={id}>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {Component} from 'react';\n//import logo from './tenor.gif';\nimport './App.css';\nimport Navbar from './Navbar'\nimport Skills from './Skills';\nimport Contact from './Contact';\nimport About from './AboutMe';\nimport Proyects from './Proyects';\n//import Butterfly from './Butterflies'\n\nclass App extends Component {\n  render(){\n  return (\n    <div className=\"App\">\n        <Navbar />\n        <About\n          title=\"About me\"\n          //subtitle={dummyText}\n          dark={true}\n          id=\"section1\"\n        />\n        <Skills\n          title=\"Skills\"\n          //subtitle={dummyText}\n          dark={false}\n          id=\"section2\"\n        />\n        <Proyects\n          title=\"Projects\"\n          //subtitle={dummyText}\n          dark={true}\n          id=\"section3\"\n        />\n        <Contact\n          title=\"Contact\"\n          //subtitle={dummyText}\n          dark={false}\n          id=\"section4\"\n        />\n        {/* <Section\n          title=\"Section 5\"\n          subtitle={dummyText}\n          dark={true}\n          id=\"section5\"\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}